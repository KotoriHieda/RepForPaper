%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 382.000000 366.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 382 366
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 382 366
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HiraMaruPro-W4
%!FontType1-1.0: ZACURJ+HiraMaruPro-W4 001.003%%CreationDate: 11/21/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (HiraMaruProN-W4) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -100 def/UnderlineThickness 50 defend readonly def/FontName /ZACURJ+HiraMaruPro-W4 def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} forreadonly def/FontBBox {-362 -369 1249 1242} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEF1B05D6DE4413DDBDB2D936EF6A197BC87EF3384DF04E6025A3A7EFFF451D52E96A62BCFC4F8A21B2EC662AB867E4A4199A274CC8B0E9C68417710FFDBFA6EC428BA65CB6DA3E980A0E5677FDE7DC2F27C590EA0628075155C2E93B2B6ABB732BFBA92BE3B2706C8FB30DF438DA3ED0DCF53C33C9F8CF7ACA092CF90F8B4A73BC6FC1B3F66BA6E47F199A9AE08A224F38D3E51775956C04F83AB2E82B74609EA55F97874925D66FF2CCE8C728969899F3314496F54BA4628AE8959660A3CCB04F95C9084C579DE3196A28845726640BFF2B4F0A8EF5FBD2FB57D0906C684306FD523AF3E3DEE5D53E01FB154C3B2CC5A2DBC468E1024678EF2E7C96C46732874C3D84DBAE20C336B17E86FA1045233CC4EA67AF286E1F7048DC35F99A232A799ECD802C1518AF8DF6A40E422A48B2EBE90E657DD6CD63DD95AA5B0ABB8279AD4745CCA51461450C6BB78BC7153E73732B40076838C4314C450269F6B978347EC73AC8E7B8ADCD3423982868BE22F037FC7DBC35CF654A32B2966B49CF830ADFA573D3F9FAFF5757E5BF8AE1A26C17D36E0B249BEAB40409A4CFA659E6A002353B1685879121071A0F9071748AE88AD85FFEA4BFBB40A11B0E19570B3118B0913D7BE2D3144C86A2E247D33C8524EF745A9728FF200A515C64C16124A8B57E8FADB3E10B29BFFFCA56058C91495F950AA25D1B78337056BE9FCA898E9AE630F7372E624BFCD486E6C4BA189468F3470079E8234C14B78A145EF52AB3D12F200AB2DAD69E5027589239E836E13A0DCBA49888DE1B22BCA0E249D85E4110B4DD216CF8B39F361C6B2465C0017DF43D093FCEC09B08BF7C103726FC92AA2799A7E201F4E875E2C8A6D27F1F469B62DA81D70B80D9B39C7F981BAD5FE3B543368086DA591F3CC366FB462CD15D1E2C0D78BF78F6298BC5959131753200FB6DB67EA9E56299901C2D3A993602C5C2F1CC3A21941DFCC0BAB8641309D14482534F30EC840C4CBE64E93B09B60B16AC49935947E1F7DC63678B0CFB4FEA87AE6B768493A2DC567729B7085420FFD58B5F996FE4BA48564CA44294D06225C753162F21B0C60F3E8CFD8458B43FB423307745513D4E3620B60131FB6E8CD7AAFFC928979782118F3900B291CEA022809682251BE135635737CB8C7F97C0657698EA4D5EBD45F2009204716F94228D24ED46E25496706609FDD6659F2909B26CB85AED82C6EDC8AF5D75855B43A61504128F75C2DAF7F5C447BC93C5101607AF7B847A72C095E75F18AE5BA6EEC4D6380ABE8EAF86828DF909C6ED834D32C5EAEB689D4399ED323901DAF53B2952B631A55047F104F11F1402CE1F1EAEB4E451982D6C52FD960FB5F226EB1D29AA4459E2B7F2A7D42DCD59A71AC5EE13A71EE78F2EA845FB543C9B0692ECB0D9BE7549DA173856916203045089DB893D2E372695D8DC16EC8A730F7664D654E7F2684AC843BBA097DA81BA6D3B12EC92D1A318958B4BF2CE0F5A50D6849E12C75B76BAF574F777E784441E39CF3E2DB0D345E198F5A5FBC693D29B180441720F75FBE4D2C7D000CB81F2318862E3C8D983BACB730D2CEF125ED3CEA349008FF566724088172522A84A641F70853FF3260DBA5266794D98FE6A2D70212FE4935A01BB13B650643B9FCFAA1FF912A4F5A0263DF310B10229F4B6357FA0506BCE64540309980E792994C5BB81F4D95FC0A8CC7D9D38F03656FAF6414347EEF36B4182C078EA00579877472CE4E53BF54BAAB63422C73794C5DF48916EF8F45C74AFF576ABFAB5E1ED48E055AED83828FEB0816D3355C9543A05BC3F70F8523BF23507F21157E1F384A43BC45B25ED8A543AF67204AAB9F12BCB52B5B4A3505D0D22BFF5D9A906294DD480D2B4FFAFC9D2B66C62E479B51AB2A7926A467560072575209E452A7830ADEC96E17E5D3B9D9F1F83E3B184CD813C72F9233B78CA4E125ABD26F29B92CD9DF39D6FDC2A217E2B6B458478404B5D8B66BDFE5210851945C90DA2083E26C00ED89243E7E7CA959EF95589344803CC3BA180CAD6A51B560C37B7032C0FF9E0D68B5A5E087474A0985363102E21EEDE02F3AC61BD1C091F37C5F5D22FAA6F9F02EA523BE4D6E7FEE4A35FD978F39D6A5F13C59BF422F33F2F40857F51C976B09323D475FD5B5498BFB82B4B3ABB9408CA345F3EF63D608C1B2864989CF2A78C4DDB15A9E4A2A198912DAE4A9CE85A3B93A74F828941C1849295207DFF7CC403883A7D59BFC2CB9FCCD34DD10A8EBA65512D44FD04508958E921932AE73E75C402CD1163400D5E20C3AB9A3A9D6D0A64DDDD6A552352713EB5C324C0250B771285538E0872285F3AF752430737AEFA5E26359802F5B1ADD8FC766514113FC014F9232E6E67D892D577BFA5A0014EDC9B885C11EAB1C9E1A23A8D9CCC5EDCEF5F9FEA07FF9430305C43005D1009F8C570653ED2518180CDECA6931332DD0D6BC53BA448A8F1542BC3A005B251B0B235CBFEA456B9002FBD9D84280BB5AE541482190F0F31B3EF85A665D4401D663F6BC180A55709AF726B2B6A796C0855E1FF42E0CBAE4077AE3D2720F241649F201E4D16A3ADF03112A89C84937A1F186696975EA236E530328CFE16257B67ABF264CFF512F19F89BFCCAC55A87D7355B00346A6AC5249CCD996B744439D27A40637AEEE149977A30A27B85C0A9492F70B5889B8FE1AE9D943DFEC531A34B3E50C9903A23433CACB51C8B8695F2E2ED76666F5F057D60D3B81F6B9A2A6971971F312E888C5EAFCAA0B9F3DBD33AB04CB0EC8DD26085B8D251FF38A6929AB8026FB68E7ADD46E5AD673F6EB656266DDDC6624B6EDAD5DD58970D0CD0DEEEA7471AAA2DFCDD7D7863D12B2762DD328496491C0CDF2BC13B8DEFACAE1A5184EB1A9E7996A3B4F1C2AEC2A170524B7B341EA1645A15BF7BFCCD7853EEEC21BEC974CFBF3B1F52480878AB8FEF5BF8D5555D4EB8E197E47A55142A02ABFE745FC82E8527F7850A76A0715D5071D23E48C67E4833D34A529984C2F2E70422775C51BA8CBBE7383224965B0FA8CE009B8CC4938A84EF67C2A40657BC40301798D9BCDC5379743D858E826CE4F3237964808D23D4F017FA61005376931EA3A6ACEFD9AB7C72E75A11F2BC4A2BF9FB0A1BB204AF8DF9862729D0C1CBD072303DA33519B2FE40D18BF8AF53BC166E17B32771B2D4AD08E2B62A68797B4AF83457B2100A2AFE38291B0A9BE728FE5FB87053D04DBA39781AF9C2254565537340DF55C1D3DF0E12728E097AB793F410A416A864CA56CAC6D702C31B57527EF9CC8EE3D42D2BFC231534F7267FA63DDD50335E2D9015C0D39D76AEABEA41C639D75E4033279225649EB7CFEF02A1FA2D161FD3AC9A17373BFD5DB2327433481A944FFAE6181DB62927471D87169790F3E538901145A4CB9606B93B948A032B925019FA39686FB938978014E95B572C717DDA570D1CEC2C13C0553BD50D63F17A20F45F198281AA03A6426F22383BBEC02D5720DB1B88491A9742795D5A466CD90E0301BD85300DA05B1DE8DE9604683E24B41A8482293688D46B8C966DE0A1763841FC3FB040355E978CB91D2791B992C683DEAE3A45A9CDD4F0BC39C0D5A51CFD3271F010DAF268DD61B9B39C4EDDC1BCA3059FA6AAEA3B3973BFD68E5F53BAC22768E54434282721FBDAA3C1F48E69555AEDE5025A390B8BC7D561FF2D4C97C7D69434AA85054935DA7C630B790A3400AE5D43069960E9AD6BBEBA7B9988EBAEEE99D78BC4AC6C2F936E1AEB37BD78A5608D14A11BA066C14E5B509D6C799916D114D1A8966D01539AA7036FC37CB42B1883788DA3E0C8BC17B768069E0FC9D01176CB166903A4BAB2FCFEEC843820B7DD09349B1CD101FC713BD4F8158171173A77B85B16FDE1B7110CEC8B1F098659ED0A908D756286D92F5072914220DEF2CAAD857646ECA3F064428F0DF181A66F4A5AACE29353065ECDBA27985C8028BD88EDB328FE52548D52DCA992157C590CAA342E66ACD57CC76D9A5BF9044C7AB56E638C1710EBED8542263DE1B8F1F4865DD10F9AAA7EB1596581AD3D4EDD516DF250AD5C370D5EC4FA447A0AF68B6A89F1099FE3237C96E896F601A9AE588842C8C278E886A5FDEE1E6D502E3166E86887A705276E1578B352A1F1C3BA357FB2E786233CA73360FD1C3246F01F414DABB5FA08DF79C054D643F0B16AABF653A454744248B463B51691CB925B37FB39E5D8A96DF1758A06B7B672F08B4644F1B23D1147053D68758CAAC29CEE01598E35B672AEB17D1658C7013F98670CF08085FD8B83A6D304EBF8B0A67781CE1A26668D5BEE6509AF5539DDCD075AF5D305B3AAA56F26B9254548D6D5CBFA675D4D1C0A057AFBFF1107CBE31A66613873B23153B45DA7E11EDE4394DC378727D813449B8750EE7A1150C35B02E42E922E900E78F5D5A6CA45F9358FB65F8C74D4F344C37FDE3BD9252FFBC361C3E946C71874290B275DEAFEAD8FC954C734794F7B339ADB9DF6819989A3F73E00FC566362A3644ACC0322864F4C922C04F7BBDAB8F8CB4FE0E51CD9E5B41FC2770EE8FC56FAFBDC0043247C3739BD90DE3DD34FA156298726640B3F053E009751E7700A2C1B1EA28DF784EA830ADB535166BBF91D0FBA1F7384F5581081EAD859EA79A6BCC59A540A0FC9E563ADDB95CEA955AA7C09E4EE0C2429FCBBBBA5C9C4CB3B8CE748BD1586AECAD2BA54B315F8BDEA4E154F893530AF0C4742212D2EE673F869D4977A115757DE8130E9CECE421FFF581BEAFDE7D764F9ED66CDC122E2A5EEB63363AAEC49E185AB027A44E6823404B1AB024A19595701149F3578EDDDCFEC774968FADEA8F12E4D7E0BD6291298463ED865B466B6354B0982DC53CB3E94AD05CFE6748FDFCDD78CA5662E35CAE09DEAEB5B4B21B5DD172F844AE78D99745D71F859B42BC75637A323A05C6540286147F5F791CF53D24D10903389B71A94653531CD6433F6496D712C913351248C50FAD3F6C24E0F50011E9A71C5B6EDB032E5252A19FFBE2AC4F8CFEA5B9DE663B26E61A66CA9670AC0176A5E0E41FCC0B35F9A956C5446191F22860BA702C2EFA06BAF40ACA893D2A61BC3952B4B7A36D9E4045D5F7F1702A3BA968A02AF8127E4AECAC9EB50847AE6654A92C5DDCBD7F10E7FF7B77F66914427642BCDA60EFE7B0DC5FAA19575198B182A0591BEE20B7467DE29CFE468A0099DF7F3523C40844C6BF4D505E1E3AB895553BD739540848399CA76526BEE5EE2DD44A797B79DC3CEE4DC2926827E738E8D9B1286CD91A2FC1FE968A39C262EF7447BF44DCAB397862A14591BC8F165E5267AC8D1B37A81847E2F28A1A2188CCCEE2F0903FEB40B392853E606B6206DF60F6736503C6DD66BEB00296193B51B8A193B9ABDED2CD2C21324AF77E7DF616DC18900065568D5F748D4C67BF7B102AAB10DF71A6C76D8DE70F6C175A5898AD4E816F1AE1DBC2FFA0E8DBC55584732B306F91297318570F906E070EA4AF63E83B968D01F89735774C7FDC458409D323795CE9278B076D1A38CFDC4F820FA341A46AD3306F54C65EFCFBF6DF6835145D905207D1C67D3DA6C2FF2124996535D0813227F549FCD87E377C68233CC95CAEB3BF425EB059DE6BFA65F3A6E15DCD7A04F1C3377BFD52ACDB44AEFF002B6F32F4142DA95D37695718595DFAF27D99DA793723D169FBEB70E70FDB15D3B3944E56950ED249587A1E18A1E2106008C142EEE9321523BAD88B23E41CFCF056B527F36294C6DBDE52C957603100451AF61919C082830460183EB11004843840EAD2720D205EAFBEEF327EF5F6BCC373AD33E2E7C10FC243BB02B4B15F4DC28E9705043B1985F555C6D2ACC89419C93063F1549EB8806C44ADC55784BFC5AD239C17F1B83E2EAB19B776D4ABCFF549E5FEA04BA535CAAB851E3BD33A50F1B346668948D7AAAE058C8A15D1B87304829B1BAD276AAE1C05067AFC8FCF8F66007F5D8D49D8D7EB9C8E57A57C08E952F588C169A64555385EB5846E3248F95BD8A56FE18EF13FD34AC1CDE7FF7187AF433006FE0F8A474026F77149D8539F0911C5FA019DDA295E9AF92008A0E7A4024C38AECFE25B075B4390230E3EC687CEE4B10C05242DBCC14011162DF73818E9A007EB8B6BBB2BE528BF9D960D1661E41C082C8E386CAFBDC35EE0E8402769D24977888BCE9D693157D855757A030889685BFB5C9309FEF539034533620A6245637827A9351329486BA173C6F11EEEEC1B56F1E78F20B948319DFA9B7111E1AC7CA32ED44A12346BD6845F14B5A959AEB2DDA1167423C924D2E74E1EB1BDA6AB25AD8148D701358B229F0734920F1EB68F5D609DF910BED30CA988C9558E3B779E2C49736A3E7D917F9AD5D7EC5A0DCF298269CAC7007CD11AFEDD2C01E03A97653B1E20BC6BBDBF0E85883FB98627151039436098CA91516B1C3A2DCF89587D53D0BD35BE06841690DD61F63E8B6F1178BBE8580731EA3CD9998F783435EBB52D3F2E1F8ACA7AC294DD1BC1231EBCCEA5CB9EA14E19D386CEE10A27930806674A8471CF1231897831508A32CFF955ED08766BF469D0725ED81FB937C9CFA1265DFD426ECED480E897228B0DCBC4962D7DFA76D1ADBAFBDE0DE5AD3885E64BAAE9AF5E67647623BB59BE3C10AA6A7C62588BBA777114065DCF2A4D195F6064EF73C361D9D88669FDC31BC68FA95C9715D7970010EC469AFA3C3B155A3B5C3E8E85C94CF1947EA758F1B6885CDB8D1C39AB0D93BF2F285EE5C5E79DBC073A082E75AC1537010B2213B794107B3BB0B5A78488B0A1959D083DE2EB94FD8772C52AF2736C4917D24A88BFAB6810BBF0969D3B4A969BF948464B37E6E2B85F4B6D07D1D0B8C73D80A0588788B440B9D9FD4C4EE52AD186EA3D6F85230226A982415F9A682A597E77E708CBEA4339C45A878CB80CF7FF9DCE12BE28D384E26217CF5A3E65F775B997C7D83391B7DED266CB1C20969D554505946BDD367BE40D8D3D05A5A5ACA67B041C2E5A43742637FCF3BFD3BD6CA02B6DE88C0B1268ACCC6A60A562472A874322B1C0CE23692979306EA44C7976D98AE941957982AF8E8720757009EBC454494F2E8E3A8C645BD269CED7162B79529CA619A0F4C9188D373BF460D34460FBC404FC7FB51AE633A9180B4DC7F99358A3C51BADFF34DEFD139D26E46C4087C9507A1FEAEDF618BD38D1CD8871CD6B757DB31989F768BEACCA88FA49A369B17184D3C8C2D0912985E6FC421F09F746EEEBACDEA7523A18275F0B50B02C2FB5FE64ED5022C4A5357FED916E8C0038AFE812B3FC19FC32489B01BAC5B8F7280F1D112E3BEC6F2603B322B5F78792FC527970BFE0FFB1B94A76FE985206D6B196856938E5AAFC53F63E9073218A17E111810F40DE05A9CC7EF0A6760FE2391231D391FF0277F530B589A09B9C57B501F239D65EB5966441C22349ED048EB65A69EC82FC74EBBEB99316F4E76DFE07D65766DE166B2668207B042D64F9F11E16B2415E1570A2C846E094FD652B25608DB7ACA31E8328E15B319407A76F887862D54BAB3D8047B3C275882CA5099C8A187FD653504508B140B984561941CDDF6A8AB1A0343509F18414F69208E7260DEA82D58CFC47774BD41CD762DD006984BFDCDE4DECCEE83A4F554C6111EF3BD5EADCCAA33D279776850C1A5D53169F3A29F332B203D7B5F1F522765AC41ACB30704F0CE920EF1C798E7526C1DC0BA98057D2CBD48F78EBF964093E915471D7D15FE1A61535DEFA06B08AFA8598B2C5EE05494C92B00E5229BF80B4E2D9B2D41E33869E2BEB5604D5E6247B852BBF0EFAEF5816D93AABBCCC308B37B8C354C59F9CCAD02B112A6CF5D7A6BD413A73B6039502A8B2E51B18337C61A58B2DF96CD97E07C8215FFCBCC0990B9E9CA2E519E14548C352ABBA3322A727A6A32D5E347FEA91488530FA33643D80B107A17ED3C8661A9AA22842574818D8E2E330621B162CD2C28A61D9D20371FA6F519B9E9B46603F14F88464A9B81C9B87DD197E1E5E96831F3715DC8998AC0E556F16DB74C13D027D019BB4C5B17CF9CB5EA9D57FBE736B94529FB60C26F5F86A94EBB0AA3C5DC534ACE991DCAAAD462C8163243B4622DCCE076C60D8460532996D9EC0CF08646979BA82743FE28E33A5728F4F91DD07CF92CD8C64D1D3A285AEB4A9CDF9D1312C84A679F7A88838A689741AD717DDE81A6A7CE4DA510C96872DD6B459924F5F703A3F5F37D7ED7D5F1A96EA0A8E66007F85C1468DCD1BAEB218C0B93DAE7947CAE57AD6E299D707E99DA58F2975E07A4FC11F59E4AC387749BD0671D76F94ABB2F15ED477673AFD62BAACDC52F0EA5DC86EBA0627423B741FFCB160DC990D63E17B60394AF95CDE18DD4D94F88BEA6AC944B609F61898E96FA1CA0083C776E062BA79B5FA5CAC44836D2E2F502FF93E3953951DB24E8D4092ED8EA47EFA121A0F88C15A0ABA5D92B713C0D423D956E85150A45812C88BF1CAF5D5808C4EAD5F6F0AF28CC938CFB3005BACEF9C427E9E342BC214149BA9ADB99CEBC0F7CA76B3E2BAB01CC685F6BAB33F412C732E5AACD3E7FDB41D5C6D2032BA2554ED3E651C0488168C07D6C3F6955A5300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType1-1.0: ZACURK+HiraMaruPro-W4 001.003%%CreationDate: 11/21/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (HiraMaruProN-W4) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -100 def/UnderlineThickness 50 defend readonly def/FontName /ZACURK+HiraMaruPro-W4 def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 0 /uni002A.11 putdup 1 /uni0041.34 putdup 2 /uni0045.38 putdup 3 /uni0046.39 putdup 4 /uni004C.45 putdup 5 /uni0053.52 putdup 6 /uni0054.53 putdup 7 /uni0061.66 putdup 8 /uni0063.68 putdup 9 /uni0065.70 putdup 10 /uni0067.72 putdup 11 /uni0069.74 putdup 12 /uni006B.76 putdup 13 /uni006C.77 putdup 14 /uni006D.78 putdup 15 /uni006E.79 putdup 16 /uni006F.80 putdup 17 /uni0072.83 putdup 18 /uni0074.85 putdup 19 /uni0075.86 putdup 20 /uni0076.87 putdup 21 /uni0077.88 putreadonly def/FontBBox {-362 -369 1249 1242} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEF1B05D6DE4413DDBDB2D936EF6A197BC87EF3384DF04E6025A3A7EFFF451D52E96A62BCFC4F8A21B2EC662AB867E4A4199A274CC8B0E9C68417710FFDBFA6EC428BA65CB6DA3E980A0E5677FDE7DC2F27C590EA0628075155C2E93B2B6ABB732BFBA92BED8F98EA0D8E97D24A91CE716CBA4302B8BB00ECC4EC1903478C8987BB1B5F775F6B63CE8F9E006DFB5AFA2120D2BE773C787491D9C3CEACA5158FBF84BE592FB67BD5CDB9E25981E9E465A31B52392BCCA799B89BCE0F10AF06F7DCAB3DA2DCA40AC537F10BEACE2C68A12FF9E7C5453B63CA3DAD1B2CBCDB77F084DF5F9866C4788F20E2EE3231AD7F4715C8D89CD5662FB9F3BD45FB00CAA32DD98EB24694D86287D5107840B3B01D8138763E4C1964EE07EF501269ED9196A4A56C69041BB88EE1C518290C9DDDABDADBE869A7459B38167171D4CC52B65E24F8E76ED0C121D055BCC4EB99C5A02DCDE0F1DC60D963A743C097BC8D0F68B32B1FF65AB676F6C40B1E531AE1B3B775A096A08176844AA27EB3998B020704BD1D0E6113916A4C91C04130936F58D50407E7B67EF3DCC5C16BACE3430B3CEC9459A06A8D6936C2BA9E55EC459B7AF3481F81827CA39C65D123F10AC52D0CF1A7E0C4714F25317B7BB4C0483F2FAA6F958354BB358D867584BD06E91AC96ACB159E72B6FD6CCD0A90CE68D5066C5B0DC7B8F28678B02137F72662C07D718AEBB10B7C32CD1B5497800C36E7D1F056678555FB5B1FE88044BAA91A11F557625F4BC056812918A32261B4ED395FF954158581565F959B3F71D80F029BF7C6537F870B6B66658ED385A633A6C9EADBA3149B65576C8341893F6A28112BA7A5C88C396BDFD0F9970529D8F7B627360C98F49A96423B79CFCDFB2C26532E725B1FC8F3442C063FA41CA536DD1EC8CADD2781100D2C3EAA7B0CAD24A70F33B556FF7E33B1C9988C501ADE07C736E15D1E73B6B8A606A53FDE6B5322DE47D84EC6983EDDC2600C8E3A9FCA67DE5DCF4AF7EB6EDFF01B987D999AADAB6E32DC0B8C3E95FBE88894AD69FEE2B071DFB1AB9D2872CD371A7ADAFF2909663DE6F0C64C336DB7854F3C8AB9152FBC03F29C3A2A67CF93C2FA5F18493BB27CAF861C673D26C55342C1195CB8B7EE010850CDFD07E86BE78B9C90C63F323E6B8958E0F5C2345A2B95D784080FB2F8D7BC56B8945ADA513C533E74B448E60BA0EFFDB8E6A9F3157EAD5815B1F40C9225F4155863D76EFD73B492F60F7208BE928A4A1BFA22BB2DC7D93E779367F5177A1EA3EA8AE0A896D12D31F5506258274B2E505AF0D837EF26E9614EFEAE45756CCEA2991F9B24E567A2BE3530E1BD5C53F99412DF95A65FBB2A9761F8814CAE1217453C0E83FC9A377E00F581CB8DAA70460024EC57B689A1125915AF152A3F4F79EFBFAD3DB354211DC7815A6B1FADB49AD9153EF6859DEC22567DB21CF179AB3C743D767121FB357179F3F7EE77711E0CC72B465B6D44051CFDA8A428C3052E76D20D02AA03E059901A1D6F17CB7192B9FD3252B0FA17E02DC219840EFA3249BE3FB47A1C991DC70EEFCA2543A2C41A55373A23C6D26ABC8590EC3A1BA6C002D8652DA4DEE78B2338A0E57681DB04C3CA6D9B7AFC72EBF17BCBEB2F037E7D855C8C1381A72B10EEEED610323B8E38E3AAD39410B60975953237816F49734AC5FE65F6EAA90BBECBD8CAE8DFCACCD7364BD30F0848F8F108315DCD5256D4615FEE22A8C6B981E4BCA0A03CF1043CDCC24888BDED2A7668ADD9F79A17DB17747D993A3888D2F0717C67AA8AEFAAF2E2B654BDCBCE0B83429E2D71F796E154A1D7994A078BC010280FEEC0C4256C3C2216071D49DE45A25DF1D506CA4D4433373906ACCB7EE69CF50D0A4D6EC3A38B84881FA48ACE69C22E85012ABA1C3A18C82D8582F4CBA15F15A270D6F44E0C308762CDFF5C7FA3D55DD2EAD722AB95E98F9567844B5CBBD8DFC27DD7D78A5C9A39729EECC9AA601F840E48C74660A05E6A35F9015A8B79AE16CACD8EF782CECC1DD5B3DBD0F7B44208B3A7BBF3957B897A26FD2559BF12072030141D749B0B7B71A864855E557030DD2367C5D5CA647AECFF6B89EFDB81F3F5BCDA335B75BB641D39AD75B11C96BF394CA5C8E9CB00938D4418FE51D9FC5AE8DE5D8CA184165C6FDF6F5694BB9CFAF33366562D2BDE573F70C14E57E2E94AC645F69522AF88DE961A6FAAFD5E844D423F49AEE784DD5E3D88506F167F4AF8355F79A09F22B80A2F939C76295875328315C7D70F3C867E140988BB610CCA20F1BF5E3DA8097509CAB419E01CA47D449C50EB8FC6DBB75AE2C5312BBCC5CA9186B221536517CAA6870429B65069FE3CBF3FFFB5631B57597E5B7A16D24FE40CE2DAF131637C2D2945A9054C7DE10EC53211FB439B19B89AD492621E5529405E625C020F63182483B72278BCE8773A2B6FD4BB931B238C5282486321920CB27C031E3665A73A3623A00465ECDB6B93E934E415141A384163B0DF8150F2C7827DA241D5E0610443A36B6845A32797DF9B3C73E0C5301D965AD3DEFDC09E7566029D96701139990EBFA77C5696B0DAD08BDCD6830807506DB46C590BD58184E4859B9C6369959E0DCEB9D58CD1600ACB1C743E64B187ABA12921DA99B401B79FBD70EFD046CDD97A035529DC135FE78A3EFF7F512631D6675F3DCD31DD2412546879979A64BB067B9B98BFFADD4E25C9B34E1E7EB8097F9E22E71600773402501A29D8D791D44FBB13DEF8A3E7CF1095C116779AA35FB8C343167E648DEE3022EFFA93008DC80A7AB3DDBE0E97D0D9D89F5949EF7A7B35872E1BF7632C760A5D477FACE118C3E45537EBE378E883158EE7DA30F1AFB10FAB267B7988967F55C2E0367E40016E1B2C33CE05761F318E7EBBB4540F696BD6316628E11867D683441C28CDFACCB89D112CA7082122BD330776B1CA7440D01D63B3D96BC8C505BDF2B1A79D2D76DCB2513189D2E4664F4A3C8CD1D0020F929AD3AF310A6330DA00285781872DA4E5CB71FDD3EE33633AA0E6B58A443B06731845F6681EFA641725F2E758108ABC6597A798546C6A05B73BAE6EACEA65D30F4900ED45AD126E23F04B7C8E460F6AED66CA504B387888F6E3C918B542EEC773C0D20E6F51C05249AAA1F1DAB8E6EBC29B26CE0D6F1B177C904275D69DAB1B35CB473A574CED6DC48DB75687D1934216606C0A33EAB54766A9A4FE0F6B44AFA0BF50761047855844D1D6AEC2CDF00DC2ED5424BEEDA8018B346AFAE2239CA2024791F3ED639EECCE3BC1E72D493CF01B129426990D7F46A1ECD1C3A2D6C1019B169B66D1169194A0B53F21F9274B18A3DBC5AB567740CE44260316D1101D7EE36E07D1030F9E7590CE2BC2C09C87D62C7C2DF58471E06877588E7419E2798CADCF24E11EC487D50B5E28B00A6BC67D0F0D4D5567A51C841FEB3739599A21E710F84097507FECB31F3C7FCFB1B54E2FF32152BC16D28BCB11B7191EDFAD854A59856FCA9551D685D127F40874FCEED6FAFBEAD6939F219B0022016F9AB92D6FEF0DEA9C10C928EA7D101BCB43CE1C0ABEC57C370ABFBD3DC6C6DEC1082A7B2DA394788E28BA8CA61BB4537309DB3BC2407E85F0E10B18492E746BBC327F7432BBE47B45A0C9F3FE1BC79E7A7138B3CD76EF7C62344B8E606A5F18902D4751F20B0EE3E4D22DC27D1E6D1B988EEB3B26BF0F754287F99A4E554D4BDC48152ECC7B060D155A85C953C4A6C41A7B57DD5782E38F9400751FBE48DDDBD3B810A268A096E7371B3529C44EE445B9E7FD890B0ED39C20868F50CC3B6BA0D45E9F173BD1DA10CF5F0BFFEAF1C3AA1B00AA05A363AB8B239F06B99B74F306FB8E27FE1299231CFFF175E2BE8ACDD142000EE38B213A12BB372B200A7EB6A34E5082F9E19E7ED67F0C6AA083AC0DADE8E6B01D45DB199C53C6E70B690AC71DF6F220B1E73070FC49E92645A0F07B86E57F4EAAE9D545E4FEE9C3B459A5B07E9B4C367C8693834E5F3761C7A72D34BE3B398396D2232D251F0AB12A1CFEF14413F3517FA50842B6FE4635F68107F3644F8F35197735F6803114998DC99C0BAB4C12362348CA00E9C7E27FE938E2123E9D3578052D68E879EFD749A5A7B32AA3D231E2556247F2826569C81DC65024946AD28858BF6F46F955712580D69C5FF9216D5C966B4EE6F8CF57BA60AA19120D531A7194B821B623D80A9B8372ADA2CE0E43E63962401B5396E02CB5E4021D2E21F642B93FBB1CFA7F8A7881A5F60B28CDAAEEF34BE71F2C5FB07B23428953B4C810C29C8A65733183D57036EE4F43137322DAEB5541B880693BE4425221F9D7F9D7E36DDEC3E9E18607D39F99757501CE927933F35923C35DDDDB0F259FA6B1CFF835F9975CA93BB8F61560D6F5D7221305591E8E1EA135ADD63CB713B60CD99CBBF2486A0E8B1BA9A71209CAAED63916A3D9C8AEE6572E52055950A3FF5D8F577C4CC0F17E60394C76AEA72AAEA848B3BF73F9FF03E9B90D33480180B4283660E47AFCEEEEC0161776B5A4BD6EBF56C5684CF7008DAD272E2927FC78DD6B4DAFF9E46BE417F93782A78912CE5FFD08628CAC9AD58F45A8ABF2C584433360BCECCE1F0BD8F4964D556525F53B64864B1CEE541E90156D1BAF76426B05231BE75B9B688B841C8C5A7F60E4D28F0098DC79ED2D1704B55FDD70A392DF5B8B5DD989D50FE5D75F4B2F87E0E2B3B762E4F527D398CBF1D89091FCC0569EFAE20C53778087F7111F65AC08BD9EF0C5C3BAEFBA56F17DF052A65560ABD50F06E509B207A4735443EDC13C4A957D61CFDC4001348993A44E6A6B6CEF0B3F90AC2119A446BAA907E43AD49E74CA447619212AF8F8297CBBCB07D0FB6B36EDCC26ED458750405947C56B2E8517340F6B728BAE85474C319A4CAA917EB02BC19F0AD79B3D621E4687A4E7F5026C4C54549FEA0CA829716F36940BEE511478913211EB6A124C36586C2D24BCB0514491B2125A0A190691CCE19FD638CC2A96B047529806F896D9708ECE7080955E0E98FCA148FC4BEEC2659359B461C50CD2BA5BB02DCEA78B7E1F538F9F55FB8516F1972F5826919FE2D859712EF4AEFE1EBCBEE7E83C1CAE118E047ED8193194EFCA92F2AEBE73211575281A8F1F64E35128239CB40B67F51267D33EF941684651F7399EF9AEDDC2EE7F5AA0DC364B0CDA26C4A46FB3E4302A44893A2B4902C6BD4843EFB606CD3B1314E7C9C26DC9AC32A5C4FFC884C574C93418EA2F917B2BCDB9BAA20D2B2DE6C4697127048B8056D9D28DAEFAFB394ADAB6807C573E65A31134C96495A82A3E7BF7AA88DEDCD09D14447CAABB299D26C07036E9584A527239875C2003B46F940C004AF6649321C89D6A4D77D85477719FCB121804474936BEF57B7482D27042983AB0A1AA03E3FA08CAF457881787FCAA2EB8E2D79AA3B929AF8072C625A92ADD96F4854883A20770BAD74E13C83E0A3CFE378AD3ADEB9ECF9B5648BE2AF8F57CACE5F9FEED4B0894B80F86C21133375421048B66D6D91D573B530F8914F48192151C8954529AD3A9A86435797A9D05F3C4B228C4EACB7E0956314ECB913F765309CE0F67F61E8BFDF876BD5639CD61517B8E924F992790EB84570888F4FEDF27AC026212049DDDCF3B50CA746D4B9525AED9FBB541B4E5A17FE23649C456076AEA546CB72E02DAE6B6DF2A6D68156E791702FCD2321BFE024A959FDCBD495B82ADAC549A21C630569BE16DE79FC8C23B3425FBE3D29BD9FD0A1DCEE171925997382E1BB7FC69D2E11EE28EBC9B760DC9E72D59555501E322DEFECCD722AC5D32C69FFD9C081EB82C3974512047BE52BE9E1EFEFF6D76DA76F8C474E1850144A48207E94BF07FC3104A2B1BBB0AA1CBDEFDD1440C2FDE4FD3F2A373D6C5741BB5746922F87F1ADE4D6F33002DEF36D81CB97D9071E97951C523D1A781A756C3526D8211ACC4B88D738561B3B2FB6EBC593AB8DE9D4CDB3908F13942A4D529C7DF7CF3D0CEF6A00E4C2C3AD5CC3169EAA5E061D4E8F37F06CC2BDBB1DC110C06CCFAF64FF60B2CCABCCF6999A1ED4CB5302326DA9AA2A795F782D8F1A65A3493B7DA3C5031B3D0535C66FA38AFFDEF5D1E92A4917714AEE5001DF3E5E8D9335A155C651766FD4B7F2996E5C05B65CF88EB7B740C2421718E9F3818D56E55F5DDCBB6E480B5C59BAE3C4EEC0F0FC83BA9619A59883B6CB9504E911E12AD6FC67EBB754B92B3D63B0B50A92D5F2A4425E2E553D06A7C1D6802E07E774C0A7B854B3218B87427400006EEF7DDC8B0F6D3D35FF76E7A85B9054ED13A1DE59700C05F2007074925246810B7861806E9C2D7BC80ECFB4BC1190FB803C6CF6E1AC3F850013A6A0719D934126281D94A7C13843F4C618C93AA8E45495822140EE0C5D18FBB6D49AB31105353035378841912A1191892EF9D5C723686C5BAC9A5270E6685B450F2D52FBB6A768090591CEAAD185A95BC57D0829AD715BED4384A45AA04356CBE3A05C55592FA5E9164EDDA8AC5A307EDF587B943C202FA1317DB5DCB5B7B64AD9C18AE14452A271CA030D334227900EC195A0C7BFBA71AFC1C66DD62CBD142C23164FEE10F36F5CAB82BBEDAC05E75B95BB087F1581B6A741BB71B4E504A50093C9E4A91F9E345E0F6A7D67801F908775A317D51E8FA0F8CBFEE6F21627240BEC86F53954C8CA95E7970AAD2CC328F1EC0C86C7124AFE72DEA1AF8F2FC8871F86842128EB9CB7471249AD1A74E123101AB80162AD0C73CAB0602033822B4CF41F81A49BC2736C43CA5A5ABD9F2025FA3E4F4594202CA25E0FF9CC744C4B624B1720B1C2072E944A78FC5A26803F135D78CCB970EB2CBD01D0A581811547AE88C4134D9DA6301A75CCDF1607FFE8628AB56807142B0F818E8C483723945B019A1F081D2C59F5A9801301E7465D344539F945508A344B1AA29724758D52098AB86BA9D68EF04FA9498F3E71B0A2E32DCD8BF2FB227C1FFAAA8366586AFE7825EF40E4142E549E2CF5A5A552C90493009D5A505AF6CD2FBDB5C451800193D39B49825FAE083D5160728DF47F8DD477B758D009F9A6A1921B159363E9D1C501DEE908AC4761662CBA6044AF5F900B9D957CF275D52173D95B0FE82CB687DC33DFDBBF43C580BEEAB85152838E1C2636C96463C3A08D24CF3001B9FA89DA1959D8BB67DD8DD27F95CE184E8414E5FDA1AA767CBCD194160887D21055C3F9654DD365E450276011B56C03DD97659682D9FB862EBFCB0C54B152E296F32C244C7064A9A138B0B11FD5722311E3321FE027815F292747593597E2F4A39646C3EC011DE31C478BD3E7F11027B5BF9918C96D59070DB746B7D6872EFC5F4677B8D2FE838AB68716EE7053A1EB799251EA3782E7874531B5CE9086548F74353E6602CA2EF009E825852A3F531789860A99AAB7A7309A0595F352A5283E458EF38B9A7C6AB59B5C6EB664097AF0B14BA276829B3CC390B47C3BA0AB7922B2A097179CCCAE5180AF6533B953FD7C40E01A24E5C96ECCD69293B38B95D977ADF0EAB5DCDDBEEC598D55439D84B0C3DC89B4276A2CE69E89256B56676369406F45F9EECD6A335FC925C29306B28B64694F7E20917B9355A39D29E43BD4F9C6B894500BD086F8CB3683B6490EEDF0FAFE685926E292C241AB47756CF8242D18F7D6A4958E02428D591FCF227BE387123C4FDA38AB81C0951E7441F0C70B17880F3392BBC166EE5E58DA5CCC5D11B34E3AE0F15E7B36112FC9653D045F62E9EB56E767D1117A2EC577FD5DBB7A92DB68FAE3000E5E5B9612D0E780469F6A40E0ABA4D1745D602DD1C16FFC27BF3DC3E65E7D1CC25B86E6B4C0907C5B3096A244D959E50019EA0202B56846F4126BFBBC0B174334DEB94DAC8D2E6A8256B6EBF51C858A7B62AFD435E70AFD946F2F4E013113811C05141409816330C8365AF4F6EF6E89AD62D53F8A4BAC182999D242978D1FC4420BDB48CCE75B08EC85DF7818FC4E813D3F944B6F425675F5FEE4D2868C6B5247E4325796E692DE79EAD9B70FDF388202050C8FE616C068C2024FE72BB6FC8D58BA7C49FFE325C388407E53EDD6C58A8FA419F310A38AD15180ED388A50A71C5AB01C09F8C2E8C8484C534CC21C6E34AD6FD21D8CC49D952D5B98815153F4C758C486630DC84E21896840FF493068E7C509541566C6ED552A64E6B8FF6B3EF0D0D733AF3796ABDD955E981B36041FEF221A39AEB38C16797F771B09C6C9C9246F8DFFA0C5E2781D7540FC6B63350719B724ACCC97EFF16465A15AAF23854A242EA34A60AB33098C1ABEB5F41A935A54101B27578AE7FE8A26B0DF73612E4110B935BF5EE147B5656828E9007CE4E3688609473289D24E0AA44C18C568136B37A9107E6D27CFF8750CF33215DD6C2A606DDC39BCC9CF53232454B94D0DF47D3BC8B2AA5D10B1989F28EA2EF4111428B55710B77DA42EFB9DC7DB31DB9C0A5FBBBC3607253ECBE93C9948F9EB2D30F79D5F66A5AA337E4558BEBF63154DB94DD1EF9B0B0F065952D70BC3A71506FA3FC23E175967A39153F8FC9E5291E828C59FB2AE4ADE6998F78DA7E37FDB62D40B17C5EA3F0947E406E5D41BBD4D747225627326E6278B214D33DF40103BEC771B613A05F3778B4CF3B925DF4F9633ADE910EC7F6A13FFC43E1DDA648E7891EE5385AFF3388C96B9EDCFD26B2073B6839E534902A922F49945AAABE5C1AB84291FE4E848A75C8D8DA1B7F17A9248018B64DCD923DA621EA450CA2E00F1358CBA87C0D681DB0626EAFDFA40CD8AF483DF648D99538EAD2D7A387227EDE7449EAA25EAA2AA3515980B808B88A8C7ED583B9316898F0CB63F7E37C2E2FFD9918C41A8859B24EBEF86A16FF77D61CD917F77327C752A15BDE0D8D8A39039071F8AEA8BF9F838DAF97A487919A9B9A1251C1B084C46080623DC3B42D3E23D46D30DFA1A5AF1E207A1EF1DD155AF74AF6DBEAD0E7871BAB4B2CCADD0B08956AC0D055477FFD297E1CA20D18948D1EC2B7CED82253246F4D69B728BA303B4C1C5F93A49752F8C49D66F615EB5C41BCA4345D619A9F1D382049063C733BF34F176333A4FB1C78A91FD7551CC9B717FFFBA66AF3B9BFCF1695DEA700700817C5864EB6FB955DC7283470D6B3980F47598FE81ABEAF9C1967D96B6A9A7BB309CEE9392E09995AEC925CE25D63AB000A9FCA6A733A2450F8FF37DB17FA35490717329FD6A97B66DD0580EED13CCA5C9B3E76D69B062659784053FC0D87636E67DB31C142C3111BB2F894F301A16A062E9B2A1B2E0078B4564B7387D6DFE060E904FB48688912F256B2833A7CC2986B4CCF1BF6BAFF5BB49D666F15667515840BDC79F9859086CFE74E4377CF46832E349BCF676F0147B56011E3FFF04A31C3834F61B8DA76C8B8C82043EA1BB854C9294186226B8F2839751CDA3149B4C1AC26DCC2C5AF376AEA12466E36E9127419F274E9FA4D6E89E9130FB7629F4CB05DC0B1E06C30FFE401DA760930CAF5CD869F17F72904A6CB691BCAE1821EC1250E0A721BE7D7A27CE17F592DB422DC09DD19EFAFDFEB99D4B11A319F59960BDE66957CAC54DCAAC9495F1F87DBE6775D3A861CBDC8E5100D9F63040AB77EB7D8C3F6EAFF4A0AB923F40419D1AAC5849E4A8CA839C8619DA4B73FB70882F90E49999F78FCCEDACA84EBFD4C77F66FB16288C182E2BECB15AE3F5D14525E2DA843A3B841C396103ED377E3D010D9257996F9F35AE29A0549F0D8BE130095D4761953F317EAD4E970B77C78BA24EC5BEE79F9133622B03F531FD871EC879009E015228D15501DA65AA3C6D3E240516F04773B3F3405C818FA1CC789D84633E6122557587D7CC226AD377FC5DC46C9E0492F7AE7CFA7A25A26E3DF4FBF13EDDB8C8735B3CAD63242AC98A009D039EE58A1A146C6FA022A70A11D87824532F77E57899BB8797A0FEDC39A47B6F9049C64B0C41885AB9C012F4C676F3814EFC318CC6E3506528DB5AF264FA95696878545DFCDDF6195D3F45F2677ABE550949024A31ED30A0020798B2EAF11E9C8831588DB6EA4EB2DEB0B36CDF84A208BB066EDD770FFF43E8A4834A36E598B6FCD46CA28282476B5913A3B2D4163EC67AE547E9AA42FD57E3C0047938921FF31344CEF29AE2AE4BBABC73972E00515904C0D457BAD0DBC85FD12CC3B075BB074776A8A0D1FDBE3C07AB22214E1FF6AB889B8345C2B2E90048EE7AEDFBA051A642ECDFE919299665A819FD81E15CDF099D776BEB434622CEF6FBBC4452CC61C0175973D5EE5FAC8B30322C4696C56BC5E59E8F087BF72A34F837A037054EB40FE9EDDFB5B022CF7F779408A04C045C1FC4246DA6DAC0BCD134F8799059B361FD2C2A8ABD3C9161858E27F3060DF32FC90B8CEC1A5DF62F7341392B32EC4AD2C7FAAF1713462A55697DA677918A89357E52EC534639D79002ABCEC6296864B12BF0B636CE9ED580E263197B7F6750A436044A681BD1A94966A32E5FBAB9C59CCC492A01B757D52416D4088358594D96B62CE74B33F7500629C8053D8D4BD38A0D83ADA4B0CAABB043BB8A8A446DAC777F2E5A16BB9BC0D11D04B2C24318D65D21070F90012AC40DC27B3195E040722418061BDA28CB310398C4F570BD5F4793A2E46CD2E7DF98CB6FF33147616AF8441D915012E20EFF70B2E61168BBD0CAD27AEEA94DE3D3D2ED90CEED60B265FDD57193B8EFF9E717852599D5290AFE0DA3FB80CD53433F7B05E4E293AE25C7F4ABC8063F440FEF084C15429C2D916861E6DB24117E3EB3D030219545299966789A742E69BEE2D04BFABEA39C986E74E3E048F3C33F58EA30EBD78F03BFABD319E457E17F45322108A063EC65EA894049525339231E0E12D8902ABD540079BAB1EF54D9FAD5363FA0B13D83AC9D91435F883D6C237412A10977C4E3F2235370483C85FF138C0C7AAA7AE1288049894E3069DA62147A33D9A8EA1210A21B382651DCEBF09CCA719642FF9D1161A2CE1BC7B0EB013D40079054171A630CC18E00BD50FA1259809EE9F92F766E05A4E7F03CA029FFFF352690B356FF7F57D98C6F2EF4E490CED72EE5E9A5DC19A226C2515B0B62D13F30D3BFFEF5B3C2E02115355C0E191187F456A2C20E77FCA7E57C73453BE8EC04E9ACFE89D537CC8A761FFF87870A4E36DA17337827788458B72A633511F536E7916DE5F241E6A95AA4017DC852282BC83536DF311F0E4306AB68E8A9F604361E428944152BB40F7A809AF74C0FB44C15B6F8B0588875B5971BFA54EFC2C08975046ED50F185193B5CBE8064CDF41369A5C6AF0FCA2E8B2F620F6470CC97CE91C02C4E2CF8647515121760A6F07EC71A9688F13D6A0E2971C52A1E8596E3953641CC96857A2BA2423EB29DF1310FA63E22D17A3F9973C5D9E6D68C3BDEC204773A4AF692E07EC8640BA35D9FC916DD39463F25E1EBCEE3910C9D78F3B58A91CBDEA2CC24B6AFE37A87B28462E4AF34EB40015D95EBEE15E16D56B3A3E65AB25F305D200693AC5FA15D4CC6CE9DE43FF6BBB657561695E3B0AB9A0531DA498EB95E9E7F184C6F2ABD3BE342D48027F24DFFC08BE52174B68BA013CA3E2349BDF3C0A2F486067E3C020A0F2D26B845342D21C55F446324D6D9CF376307120426DCF30D8A2E0B314FB358143D4A8C4163AF8BE4582D315514037CAAA37533D923334757F5729404612B9F65AB2185D1641342C053071A39F9F147FC5ECE9254491EAA7B854DFB56A51043C5D2A1F32C1EADA0661FFF8009152E3198EFE22DF5FFC098D39DEA7C393135811CAD876857C77FF1DD6382A483FA2487358EF64C5BDC7714C18711ABCCCB06EB5AB637A44FF86B9A11FDE2D00A1244E60E67336ED7ED270E393892D563FA4B9B79626A146B5434F52C5130C35B3A05EAA99E98790F42D4C9889CC0EA2636117E711C9625914CF15603D522A683877F3DDA5EAE7E3DD20BE1D972B51776B5073B9FCE373CAB070E18DA1637168D71A5FD6B997BF550F9B066EAE96BB6A2CA48EF5652C4F054F10CB836FDBA1891664D765029FCE15398352E7BA4F23F9497ED6519EC23D621AF13D8804D4156841F4C2E564CC31BD8973E016CB2E8494C948F1627C8E12264FE423B2479975BA8EB25597A4A61E17A7612BB57341B2F30AE290973B6E8BE1ACB7F961603911A87F21AB293B37147861FB23B6C413498F2CCBBECB74484DEEA018A7E2C64A78A0997962F1534600298ECB231B78C6922ADF5033C9A7C0F39FCAAFCED01ECDB66EE5AF1A93FA36335499D915A7C554154E65B8D7D07975B3B3D76C25523691BD085BC5383E8933C87FA06AD7A0D14173A92C2921112E3548A05DBEF1C21600103A340EF66FF0C85C48A583566D02024873655C3D3F9A1787273B6BE60B56C542F1B33AF95B8C3442CBB6B560A2238BEBBDC96A6DDECAC6380664CABB2794D20E516EF54EB4A3A52E53738FB805820A21C5E93C9E6617FF9F44C458FEC49A6F42463A689FB2CC89011035AAFC69A90C84E8C23CCC704C95F5B40D7200657425ACBC60EAD3FF18103F74E29FCFEF7E87EACA1461A6F1C3D8F47ABB49D98E2F721B8FB0F17ED3B55FD41761336F2AF9E3592D3F2A61BFFA44F175D88C5D6A25BC5CED410DBBEFF7C1D33C3BEE51350F6CC555ECC5875EC3D858EBB1B293A0F511C1725964E6EBDE743162BAEB2F624A4F9F69F20148ADBFA28C4524453D928F9AE5B00CB2455103BDE2457551C11DEED35E0D2CCF4DABE0B8AA6DD894DBC2214CA278C20582E3D5EFCE186FA3C6355252A12EFEB8AE188C219160DF1FAE74130D160CE0BFE7579470A2C7E148CAC8A3D18CC95480160EC42534C8822AFDD2E1D05C5878529733A86214484FD0740A9FDE44F9811361F8B7C9AE35B9FBFCCAC5D0F572C7091FA2E22B4731067B6BEDEAC478A3DC64C8CEA5DD786CFE68B4DC63A4866586C3372715AEB40B8D0D92E3AB474FD35237BD725E5F3CC97AE2DAFBA241C2D0A25523ED2C55A236D10299FD71B2C21067874493F3CA8F5C30E9D5A3AE96A9A5D47444036FA6A41C21431D5D50FCD03C7F2546EC4C3DB9BA895B2DAA29E77F9419E4E98E6B4A97983270A383FDE4DF813E3A5881AC16EB0574033AB2C4716D17BFCED47A98759D0BB59A6ABB2194248352B3D5712982C501FD27246C282842B5E317936118FAC81366D11CE54090DFCBF0530CB6E12C731DF6745D79E4BD36FCF9AE6AE33897279546B8AA8B7C43777B24D740A1F186941C456D7EC41E2F1AD006045077B5CD28310B7F72048B1CB370D2145A370110297BF1EF9F5FAD8AFCA3CC01DB3A3CB9E8643ABEB4AEAAD9A6FBCCC9A00F09945CF97D0CA903FA0286823843E6393C4CC1111BEBDC31466E61CDE41A9EC217ED8728E9021E46FB2CDEF6E4136ABE0039A962AB37BF4EA6CB362E5B5935A71CBF1D7B0FBE7503BE37089072CCCFFA0AEDF8D6E66F96D2C9E08CF6297EE68249FBFBE87F019DD386EEEA7817D081AE723E300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: HiraMaruPro-W419 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Japan1/) def/Supplement 6 defend readonly def/FontName /HiraMaruPro-W4 def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /uni004C.45 putdup 34 /uni0061.66 putdup 35 /uni006E.79 putdup 36 /uni0067.72 putdup 37 /uni0075.86 putdup 38 /uni0065.70 putdup 39 /uni0041.34 putdup 40 /uni0074.85 putdup 41 /uni0072.83 putdup 42 /uni0063.68 putdup 43 /uni0069.74 putdup 44 /uni0076.87 putdup 45 /uni0046.39 putdup 46 /uni006C.77 putdup 47 /uni0053.52 putdup 48 /uni0054.53 putdup 49 /uni006D.78 putdup 50 /uni002A.11 putdup 51 /uni0077.88 putdup 52 /uni006F.80 putdup 53 /uni006B.76 putdup 54 /uni0045.38 putreadonly def/$SubFontArray [/ZACURJ+HiraMaruPro-W4 findfont /ZACURK+HiraMaruPro-W4 findfont ] def/CharProcs 24 dictdup /uniFFFD.0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /uni002A.11 {(\000) 1 $SP} putdup /uni0041.34 {(\001) 1 $SP} putdup /uni0045.38 {(\002) 1 $SP} putdup /uni0046.39 {(\003) 1 $SP} putdup /uni004C.45 {(\004) 1 $SP} putdup /uni0053.52 {(\005) 1 $SP} putdup /uni0054.53 {(\006) 1 $SP} putdup /uni0061.66 {(\007) 1 $SP} putdup /uni0063.68 {(\010) 1 $SP} putdup /uni0065.70 {(\011) 1 $SP} putdup /uni0067.72 {(\012) 1 $SP} putdup /uni0069.74 {(\013) 1 $SP} putdup /uni006B.76 {(\014) 1 $SP} putdup /uni006C.77 {(\015) 1 $SP} putdup /uni006D.78 {(\016) 1 $SP} putdup /uni006E.79 {(\017) 1 $SP} putdup /uni006F.80 {(\020) 1 $SP} putdup /uni0072.83 {(\021) 1 $SP} putdup /uni0074.85 {(\022) 1 $SP} putdup /uni0075.86 {(\023) 1 $SP} putdup /uni0076.87 {(\024) 1 $SP} putdup /uni0077.88 {(\025) 1 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/HiraMaruPro-W4 cguidfix
/F1.1/HiraMaruPro-W4 renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /eight put
dup 34 /one put
dup 35 /period put
dup 36 /three put
dup 37 /zero put
dup 38 /six put
dup 39 /five put
dup 40 /two put
dup 41 /seven put
dup 42 /nine put
dup 43 /four put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<





00>] def
/CharStrings 12 dict dup begin
/.notdef 0 def
/period 1 def
/zero 2 def
/one 3 def
/two 4 def
/three 5 def
/four 6 def
/five 7 def
/six 8 def
/seven 9 def
/eight 10 def
/nine 11 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec

2713E85A368141D12FA0A5A53ACC44A74AF62068DFD6DBD0C09C041FE02448E04FE1B9D017E1224D44BFF718EDE9300CCF445BC39BFD537093A6DCB1C2BED5B0E91FC036951F31AE86E3C54A824405736B7E973AE8A7D7D981B155357EE920816AFBFAA3F43E72FA7E96E08769298FEBE15BF118D59E9D85DF41E9B60781A49CA821879AA045A404FB79E1433F4B8CEE0CC139469167484ED6656D2161883A9513E83DD15AA33077EEF96B38224FC659D38018637350D8EB1833B708F9A7EB0B37236D1786BCDB4BF8A35A3DD554F18A300A2EF17A3E462B80180828B3CD4088752B73FEB517004E8D0C6ED0C21ACD9810795D00E5147BF2CD2B429C29BE6CCFA9549BD010C820988C0E5B6B677DA0059B9BA6F63069CE2674BFAA5ED6EC2AF8499337B992F109561D1E0B33502E8FC048D98BE7E3DCC294D74B51A79229466539DB717CB63759E1D024F4B07A8C176E3D5E2629B21E8B6DE214EFBBC8161446182C16C4B1CD76544E27AD5E08DB68094BDB8F9A2B7D4D19A26FC7A621D0A03F14C680AC1E862DBC2B9E367A55F6A8B37EC7E8F0067E342254D3D82011BCADEB4AF01F733D4FC0FB2C410930069EF81465D06BA046E92B7C232BC4C932E95934E5E06DA8961A16BB2128A2D2121354FC950C64A922E29142C3E9AE0AA92004DD8615B974A86751B790EC88069834649B396D6F4696224F227280966A4E1603393E054AAA610912248832DFA6181918D22336893D8D988C72A58FABD0880ECD68840199C8B22B63ED453598DC9F322ED3C83273178D3D546E6512141C0293A7485073B41247D1AC51CBB019B428D333E4B8F62F15E1CCF9F0F83D4CBDF15D06A48D20283EC571970CA4F40F32261329BC353B496D039C2BD57268358E2C405EF170FAA671CF962315FFE75941677F985AA0657652044608D0069E79BE24A6CCD237C674D17F3A2292C07BECA81324BD8C4B85060F4C7E82FEC9961CE980E099291FA38CB8535CF3757DC1652F03180D9EAB45891147C91CF826079E6A166530756C632057824765C9DD6F1205121455C39AAF4E4154322AED10FE08288CF7978BBCC6CF67CF184B488EE7242800C2CA8D931770EA19C9D731227052580E674CE60D53BC2056C47090D2454839B85018B21BF2304DD9D57C7537ABBC1731E3D77384CC3B0F50460F85F2563A29B32BEFE6E8A32AAA615E89462A06B081BA151456E282F12B62352F894B755F38584541F7780D3B468A1EB20F97D1360FB973092CE12C2469BCC3E5411F1C2D788C24DAF8876EE0D012AB1B1AC8328BCCDB4F70B52CD357BFB7548C2FCAEC5BC8263C4D43848BEC57EAA39E43B2A66ACC5965298E1B1995D85411F546DBBE94634AF8A28F2B2036BDFE03EF0FC76941208C5D453818B1D5110B39DC3B268DFDEAD213C47FA00C5CD9078B43E04D4ACA007DDA8DCF
2536870421D35D16C34BACF1064E7D04BD9FC11543D9BB4A6A33E98EAAB4205B0E3CF5ABF9F21A1A149533E5F5FCB83589222B2791A89DBFC2D4C86062793EC5100E5B6B55A947A32972DA7A2CF7515666F2BD16BA45D0555AB8EEF5E5BC6C62AD89F08522F0D5E22BF7F24478300BD71BF69E788BD88C6E01479A1CF8E11FF3EC8189BEEB9E44C87AE1119C9F9700E722F6131ACB35055177BB3EC35CC7B2377CB5F6A58595624C79BC3397B3896E9439BD107E5A38F3C63E680952148F86AD80945674679FDE175E0BA6D31262794F81387B0E5D2A8BBA9DABA368F0C73F1F802907FBD51A9BC6FCE8832199B0856B0A5DD7F9461469866A362E345A6736B8B86525F271CC506004D8B2B7C90A01858320C83430DFC5B77431D1AF8489F4D34A861D8D42BC0CD7E91D176D7C1C6826FD090280950F179F1C9E3E6183FEEBA61A65A1376821AEAAF1F8A76A5EEB4602A0A9C53E04E455EBAD7CD14B119C9D80FF1582309FA60FE87269B920C25C89F45714144B19B0E8E624AF7D3D870B365AE49FE85BE449C1FF1281A50CE3AF270EAEE30DBB0A5AF8AA8002708107BFED510C82578C8B933DE102808FE047337E4650CB69F5784BA64725BD689743B0CD94357A467E50F5FBF09C7DA0DFBC2EEC3BB836E61ACCC601E2C5B92F8A71882C32DD36576B0966807FD73338D58C5883EDC1774E1BD2A9D81C7182621E4931EDE5186EDE92960FB69267D937ED3CB8C29D0409046DAEEF684BA5A477DBCF12A2CB175BAD2A6E564F411F29CDCD8F4FE600BD8CB1FB96B8AF36A15CF3BE09CC9988B3B279C96F67734B3D95F9F88B32C2DECF092985CFD6B247F1E3FB5806D17FE56B928F260414F55BECF85C7B8314A707414913A11FC3104AAA708B3A6A2B48C1FA62A133AEEE211598516BCD46852618DF5B8365100024266F6617D2C707F717DE5CB1000679CC98F6C1D98E8D25843458747F899DB6D87D1778D40E1CC4378C148CC0DC34ADB58BCB543B6A1A7F55E1B588FD627C96018500483E1FB96C43582F142308F92A53A4BFC0B5E63B31D7F68471F228A2914ECAE417BFFE389F79D2C2387785B6275E71AFC8D0282715ABF65D3742E8D0F6B83E34267FE47AAF7EAE45E6BD6EBAC203D3F8F8EF3CA64C4E34D21AE5D3E8B56880AC519E0354D95E8057374A59D759917107091CB5648F88204495E8F27B78DF96CBD0DE1C4AB4AFB78142FED9F130BDA45BA9D4BEA3CA6A54735C0B7F05E27297078EB500DDA780F2C7354F3EB1500F4B177E85CF7D1E609A4C0CFC35EB7B08FFCC5E968A0624372776CE7538B91C3AD573E1D7EF43B9511A50515896ED9CAA892DC409B7DE6C71C6C2C017BFD2BBE2C0203CEEB081424077CE70353DFD535AF7501613C8D1DC54EC7149648F1734BA96F6623FF9038ABA5B3BFF621AEE40E748FDAA8244BF859297
404D83B5DECDA520C1E3AB2A12F864B97F41A320840FA318CAA790F017211ACAF4D641B4EA435C58C5F2E8C530FF43BC8376DDCAF73A9297FEA2AD6646CFB3E80F0759D008B057DE1DF7C1A677F28479B9A9F7983DF39272FDF036BCD9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
0 0 382 366 rc
-266.5 742.5 m
851.5 742.5 l
851.5 -40.5 l
-266.5 -40.5 l
h
-266.5 742.5 m
f
Q
/Cs2 SC
1 1 1 sc
q
9.4765625 356.93359 m
372.47656 356.93359 l
372.47656 9.9335938 l
9.4765625 9.9335938 l
h
9.4765625 356.93359 m
W
9 10 363 347 rc
9 10 m
372 10 l
372 357 l
9 357 l
h
f
1 1 0 sc
69.357315 306.38428 m
129.67865 306.38428 l
129.67865 322.46994 l
69.357315 322.46994 l
h
f*
129.6787 290.29871 m
190.00003 290.29871 l
190.00003 306.38437 l
129.6787 306.38437 l
h
f*
190 274.21301 m
250.32133 274.21301 l
250.32133 290.29868 l
190 290.29868 l
h
f*
250.32129 258.12729 m
310.64264 258.12729 l
310.64264 274.21295 l
250.32129 274.21295 l
h
f*
250.32129 242.04169 m
310.64264 242.04169 l
310.64264 258.12735 l
250.32129 258.12735 l
h
f*
69.357315 192.17601 m
129.67865 192.17601 l
129.67865 208.26169 l
69.357315 208.26169 l
h
f*
129.6787 176.0903 m
190.00003 176.0903 l
190.00003 192.17596 l
129.6787 192.17596 l
h
f*
250.32129 160.00459 m
310.64264 160.00459 l
310.64264 176.09027 l
250.32129 176.09027 l
h
f*
250.32129 143.91901 m
310.64264 143.91901 l
310.64264 160.00467 l
250.32129 160.00467 l
h
f*
310.6427 127.8333 m
370.96405 127.8333 l
370.96405 143.91898 l
310.6427 143.91898 l
h
f*
69.357315 77.967628 m
129.67865 77.967628 l
129.67865 94.053299 l
69.357315 94.053299 l
h
f*
129.6787 61.881958 m
190.00003 61.881958 l
190.00003 77.967628 l
129.6787 77.967628 l
h
f*
190 45.796288 m
250.32133 45.796288 l
250.32133 61.881958 l
190 61.881958 l
h
f*
250.32129 29.71063 m
310.64264 29.71063 l
310.64264 45.796303 l
250.32129 45.796303 l
h
f*
310.6427 13.624956 m
370.96405 13.624956 l
370.96405 29.710627 l
310.6427 29.710627 l
h
f*
6350 w
1 j
0 0 0 sc
0.00007874 0 0 -0.00007874 9.035984 356.25 cm
766081 201803.19 m
766081 1453621 l
S
766081 1652249 m
766081 2904067 l
S
766081 3102695 m
766081 4354513 l
S
1532162 201803.19 m
1532162 1453621 l
S
1532162 1652249 m
1532162 2904067 l
S
1532162 3102695 m
1532162 4354513 l
S
2298243 201803.19 m
2298243 1453621 l
S
2298243 1652249 m
2298243 2904067 l
S
2298243 3102695 m
2298243 4354513 l
S
3064324 201803.19 m
3064324 1453621 l
S
3064324 1652249 m
3064324 2904067 l
S
3064324 3102695 m
3064324 4354513 l
S
3830405 201803.19 m
3830405 1453621 l
S
3830405 1652249 m
3830405 2904067 l
S
3830405 3102695 m
3830405 4354513 l
S
CM
9.035984 340.35999 m
370.96402 340.35999 l
370.96402 339.6933 l
9.035984 339.6933 l
h
9.035984 339.0267 m
370.96402 339.0267 l
370.96402 338.35999 l
9.035984 338.35999 l
h
f
0.00007874 0 0 -0.00007874 9.035984 356.25 cm
0.0051116943 429006 m
4596486 429006 l
S
0.0051116943 633293.88 m
4596486 633293.88 l
S
0.0051116943 837581.81 m
4596486 837581.81 l
S
0.0051116943 1041870.1 m
4596486 1041870.1 l
S
0.0051116943 1246158 m
4596486 1246158 l
S
0.0051116943 1450446 m
4596486 1450446 l
S
CM
9.035984 226.15169 m
370.96402 226.15169 l
370.96402 225.48502 l
9.035984 225.48502 l
h
9.035984 224.8183 m
370.96402 224.8183 l
370.96402 224.15169 l
9.035984 224.15169 l
h
f
0.00007874 0 0 -0.00007874 9.035984 356.25 cm
0.0051116943 1879452 m
4596486 1879452 l
S
0.0051116943 2083740 m
4596486 2083740 l
S
0.0051116943 2288028 m
4596486 2288028 l
S
0.0051116943 2492316 m
4596486 2492316 l
S
0.0051116943 2696604 m
4596486 2696604 l
S
0.0051116943 2900892 m
4596486 2900892 l
S
CM
9.035984 111.9433 m
370.96402 111.9433 l
370.96402 111.2766 l
9.035984 111.2766 l
h
9.035984 110.61 m
370.96402 110.61 l
370.96402 109.9433 l
9.035984 109.9433 l
h
f
0.00007874 0 0 -0.00007874 9.035984 356.25 cm
0.0051116943 3329898 m
4596486 3329898 l
S
0.0051116943 3534186 m
4596486 3534186 l
S
0.0051116943 3738474 m
4596486 3738474 l
S
0.0051116943 3942762 m
4596486 3942762 l
S
0.0051116943 4147050 m
4596486 4147050 l
S
0.0051116943 4351338 m
4596486 4351338 l
S
1 0 0 1 169.6875 -3 cm
n
/F1.1[ 8 0 0 7.8431368 0 0]sf
0 347.32349 m
(!)s
0.65999997 w
0 j
0 347.32349 m
(!)cps
5 347.32349 m
(")s
5 347.32349 m
(")cps
10.000001 347.32349 m
(#)s
10.000001 347.32349 m
(#)cps
15.000001 347.32349 m
($)s
15.000001 347.32349 m
($)cps
20.000002 347.32349 m
(%)s
20.000002 347.32349 m
(%)cps
25.000002 347.32349 m
(")s
25.000002 347.32349 m
(")cps
30.000002 347.32349 m
($)s
30.000002 347.32349 m
($)cps
35.000004 347.32349 m
(&)s
35.000004 347.32349 m
(&)cps
1 0 0 1 80.017952 -20 cm
/F1.1[ 8 0 0 8 0 0]sf
0 347 m
('\(\(\)"*\(+,&)[ 6.000000 3.000000 3.000000 3.000000 5.000000 4.000000 3.000002 2.000000 4.000002 0.000000 ] xS
1 0 0 1 137.33929 -20 cm
0 347 m
(-.%*\(%"\(+#$)[ 5.000000 2.000000 5.000000 4.000001 3.000000 5.000000 5.000000 3.000002 2.000000 5.000000 0.000000 ] xS
1 0 0 1 201.6631 -20 cm
0 347 m
(/\("$#"#\()[ 5.000000 3.000000 5.000001 4.999999 5.000002 5.000000 5.000002 0.000000 ] xS
1 0 0 1 262.9845 -20 cm
0 347 m
(0&\)1+#".)[ 5.000000 5.000000 3.000000 7.000000 2.000000 5.000000 5.000000 0.000000 ] xS
1 0 0 1 339.30328 -20 cm
0 347 m
(2)s
1 0 0 1 19.696609 -36 cm
0 347 m
('\(\(\)"*\(+,&)[ 6.000000 3.000000 3.000000 3.000000 5.000000 4.000000 3.000002 2.000000 4.000002 0.000000 ] xS
0.27058819 0.27058819 0.27058819 sc
1 0 0 1 89.017944 -36 cm
/F2.1[ 10 0 0 10 0 0]sf
0 347 m
(!"#$)[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 149.33929 -36 cm
0 347 m
("%#&)[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 212.6606 -36 cm
0 347 m
('#%)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 272.98203 -36 cm
0 347 m
($#")[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 333.30328 -36 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
0 0 0 sc
1 0 0 1 16.696613 -52 cm
/F1.1[ 8 0 0 8 0 0]sf
0 347 m
(-.%*\(%"\(+#$)[ 5.000000 2.000000 5.000000 4.000001 3.000000 5.000000 5.000000 3.000002 2.000000 5.000000 0.000000 ] xS
0.27058819 0.27058819 0.27058819 sc
1 0 0 1 89.017944 -52 cm
/F2.1[ 10 0 0 10 0 0]sf
0 347 m
("\(#')[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 149.33929 -52 cm
0 347 m
(!\)#')[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 212.6606 -52 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 272.98203 -52 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 333.30328 -52 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
0 0 0 sc
1 0 0 1 20.699131 -68 cm
/F1.1[ 8 0 0 8 0 0]sf
0 347 m
(/\("$#"#\()[ 5.000000 3.000000 5.000001 4.999999 5.000002 5.000000 5.000002 0.000000 ] xS
0.27058819 0.27058819 0.27058819 sc
1 0 0 1 92.017944 -68 cm
/F2.1[ 10 0 0 10 0 0]sf
0 347 m
(\)#$)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 152.33929 -68 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 209.6606 -68 cm
0 347 m
(!&#')[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 272.98203 -68 cm
0 347 m
(&#$)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 333.30328 -68 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
0 0 0 sc
1 0 0 1 21.699131 -84 cm
/F1.1[ 8 0 0 8 0 0]sf
0 347 m
(0&\)1+#".)[ 5.000000 5.000000 3.000000 7.000000 2.000000 5.000000 5.000000 0.000000 ] xS
0.27058819 0.27058819 0.27058819 sc
1 0 0 1 92.017944 -84 cm
/F2.1[ 10 0 0 10 0 0]sf
0 347 m
($#")[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 152.33929 -84 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 212.6606 -84 cm
0 347 m
('#%)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 269.98203 -84 cm
0 347 m
(*"#*)[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 333.30328 -84 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
0 0 0 sc
1 0 0 1 37.696609 -100 cm
/F1.1[ 8 0 0 8 0 0]sf
0 347 m
(2)s
0.27058819 0.27058819 0.27058819 sc
1 0 0 1 92.017944 -100 cm
/F2.1[ 10 0 0 10 0 0]sf
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 152.33929 -100 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 209.6606 -100 cm
0 347 m
(\('#%)[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 269.98203 -100 cm
0 347 m
('%#%)[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 330.30328 -100 cm
0 347 m
(\('#%)[ 6.000000 6.000000 3.000001 0.000000 ] xS
0 0 0 sc
1 0 0 1 166.6875 -117 cm
n
/F1.1[ 8 0 0 7.8431368 0 0]sf
0 347.32349 m
(-)s
0 347.32349 m
(-)cps
5.0000005 347.32349 m
(\))s
5.0000005 347.32349 m
(\))cps
9 347.32349 m
(")s
9 347.32349 m
(")cps
14.000001 347.32349 m
(1)s
14.000001 347.32349 m
(1)cps
21.000002 347.32349 m
(&)s
21.000002 347.32349 m
(&)cps
26.000002 347.32349 m
(3)s
26.000002 347.32349 m
(3)cps
33.000004 347.32349 m
(4)s
33.000004 347.32349 m
(4)cps
38.000004 347.32349 m
(\))s
38.000004 347.32349 m
(\))cps
42.000004 347.32349 m
(5)s
42.000004 347.32349 m
(5)cps
1 0 0 1 80.017952 -134 cm
/F1.1[ 8 0 0 8 0 0]sf
0 347 m
('\(\(\)"*\(+,&)[ 6.000000 3.000000 3.000000 3.000000 5.000000 4.000000 3.000002 2.000000 4.000002 0.000000 ] xS
1 0 0 1 137.33929 -134 cm
0 347 m
(-.%*\(%"\(+#$)[ 5.000000 2.000000 5.000000 4.000001 3.000000 5.000000 5.000000 3.000002 2.000000 5.000000 0.000000 ] xS
1 0 0 1 201.6631 -134 cm
0 347 m
(/\("$#"#\()[ 5.000000 3.000000 5.000001 4.999999 5.000002 5.000000 5.000002 0.000000 ] xS
1 0 0 1 262.9845 -134 cm
0 347 m
(0&\)1+#".)[ 5.000000 5.000000 3.000000 7.000000 2.000000 5.000000 5.000000 0.000000 ] xS
1 0 0 1 339.30328 -134 cm
0 347 m
(2)s
1 0 0 1 19.696609 -150 cm
0 347 m
('\(\(\)"*\(+,&)[ 6.000000 3.000000 3.000000 3.000000 5.000000 4.000000 3.000002 2.000000 4.000002 0.000000 ] xS
0.27058819 0.27058819 0.27058819 sc
1 0 0 1 89.017944 -150 cm
/F2.1[ 10 0 0 10 0 0]sf
0 347 m
(*\(#*)[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 152.33929 -150 cm
0 347 m
(\)#")[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 212.6606 -150 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 272.98203 -150 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 333.30328 -150 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
0 0 0 sc
1 0 0 1 16.696613 -166 cm
/F1.1[ 8 0 0 8 0 0]sf
0 347 m
(-.%*\(%"\(+#$)[ 5.000000 2.000000 5.000000 4.000001 3.000000 5.000000 5.000000 3.000002 2.000000 5.000000 0.000000 ] xS
0.27058819 0.27058819 0.27058819 sc
1 0 0 1 89.017944 -166 cm
/F2.1[ 10 0 0 10 0 0]sf
0 347 m
(\(%#%)[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 149.33929 -166 cm
0 347 m
('%#%)[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 212.6606 -166 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 269.98203 -166 cm
0 347 m
($%#%)[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 333.30328 -166 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
0 0 0 sc
1 0 0 1 20.699131 -182 cm
/F1.1[ 8 0 0 8 0 0]sf
0 347 m
(/\("$#"#\()[ 5.000000 3.000000 5.000001 4.999999 5.000002 5.000000 5.000002 0.000000 ] xS
0.27058819 0.27058819 0.27058819 sc
1 0 0 1 89.017944 -182 cm
/F2.1[ 10 0 0 10 0 0]sf
0 347 m
($%#%)[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 152.33929 -182 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 209.6606 -182 cm
0 347 m
(\(%#%)[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 269.98203 -182 cm
0 347 m
('%#%)[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 333.30328 -182 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
0 0 0 sc
1 0 0 1 21.699131 -199 cm
/F1.1[ 8 0 0 8 0 0]sf
0 347 m
(0&\)1+#".)[ 5.000000 5.000000 3.000000 7.000000 2.000000 5.000000 5.000000 0.000000 ] xS
0.27058819 0.27058819 0.27058819 sc
1 0 0 1 92.017944 -198 cm
/F2.1[ 10 0 0 10 0 0]sf
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 152.33929 -198 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 209.6606 -198 cm
0 347 m
($$#$)[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 269.98203 -198 cm
0 347 m
(&&#\))[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 333.30328 -198 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
0 0 0 sc
1 0 0 1 37.696609 -215 cm
/F1.1[ 8 0 0 8 0 0]sf
0 347 m
(2)s
0.27058819 0.27058819 0.27058819 sc
1 0 0 1 92.017944 -214 cm
/F2.1[ 10 0 0 10 0 0]sf
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 152.33929 -214 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 212.6606 -214 cm
0 347 m
(*#\()[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 269.98203 -214 cm
0 347 m
("+#&)[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 330.30328 -214 cm
0 347 m
(\)&#$)[ 6.000000 6.000000 3.000001 0.000000 ] xS
0 0 0 sc
1 0 0 1 164.69 -231 cm
n
/F1.1[ 8 0 0 7.8431368 0 0]sf
0 347.32349 m
(6)s
0 347.32349 m
(6)cps
5 347.32349 m
(#)s
5 347.32349 m
(#)cps
10.000001 347.32349 m
(,)s
10.000001 347.32349 m
(,)cps
15.000001 347.32349 m
(+)s
15.000001 347.32349 m
(+)cps
17.000002 347.32349 m
(\))s
17.000002 347.32349 m
(\))cps
21.000002 347.32349 m
(4)s
21.000002 347.32349 m
(4)cps
26.000002 347.32349 m
(#)s
26.000002 347.32349 m
(#)cps
31.000002 347.32349 m
(1)s
31.000002 347.32349 m
(1)cps
38.000004 347.32349 m
(&)s
38.000004 347.32349 m
(&)cps
43.000004 347.32349 m
(#)s
43.000004 347.32349 m
(#)cps
48.000004 347.32349 m
(\()s
48.000004 347.32349 m
(\()cps
1 0 0 1 80.017952 -248 cm
/F1.1[ 8 0 0 8 0 0]sf
0 347 m
('\(\(\)"*\(+,&)[ 6.000000 3.000000 3.000000 3.000000 5.000000 4.000000 3.000002 2.000000 4.000002 0.000000 ] xS
1 0 0 1 137.33929 -248 cm
0 347 m
(-.%*\(%"\(+#$)[ 5.000000 2.000000 5.000000 4.000001 3.000000 5.000000 5.000000 3.000002 2.000000 5.000000 0.000000 ] xS
1 0 0 1 201.6631 -248 cm
0 347 m
(/\("$#"#\()[ 5.000000 3.000000 5.000001 4.999999 5.000002 5.000000 5.000002 0.000000 ] xS
1 0 0 1 262.9845 -248 cm
0 347 m
(0&\)1+#".)[ 5.000000 5.000000 3.000000 7.000000 2.000000 5.000000 5.000000 0.000000 ] xS
1 0 0 1 339.30328 -248 cm
0 347 m
(2)s
1 0 0 1 19.696609 -264 cm
0 347 m
('\(\(\)"*\(+,&)[ 6.000000 3.000000 3.000000 3.000000 5.000000 4.000000 3.000002 2.000000 4.000002 0.000000 ] xS
0.27058819 0.27058819 0.27058819 sc
1 0 0 1 89.017944 -264 cm
/F2.1[ 10 0 0 10 0 0]sf
0 347 m
(!$#")[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 152.33929 -264 cm
0 347 m
(*#$)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 212.6606 -264 cm
0 347 m
($#&)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 272.98203 -264 cm
0 347 m
(+#")[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 333.30328 -264 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
0 0 0 sc
1 0 0 1 16.696613 -281 cm
/F1.1[ 8 0 0 8 0 0]sf
0 347 m
(-.%*\(%"\(+#$)[ 5.000000 2.000000 5.000000 4.000001 3.000000 5.000000 5.000000 3.000002 2.000000 5.000000 0.000000 ] xS
0.27058819 0.27058819 0.27058819 sc
1 0 0 1 89.017944 -280 cm
/F2.1[ 10 0 0 10 0 0]sf
0 347 m
(\(+#!)[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 149.33929 -280 cm
0 347 m
(&%#')[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 212.6606 -280 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 269.98203 -280 cm
0 347 m
("+#!)[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 333.30328 -280 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
0 0 0 sc
1 0 0 1 20.699131 -297 cm
/F1.1[ 8 0 0 8 0 0]sf
0 347 m
(/\("$#"#\()[ 5.000000 3.000000 5.000001 4.999999 5.000002 5.000000 5.000002 0.000000 ] xS
0.27058819 0.27058819 0.27058819 sc
1 0 0 1 92.017944 -296 cm
/F2.1[ 10 0 0 10 0 0]sf
0 347 m
(*#\()[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 152.33929 -296 cm
0 347 m
(+#\()[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 209.6606 -296 cm
0 347 m
(&*#&)[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 269.98203 -296 cm
0 347 m
("\)#")[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 333.30328 -296 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
0 0 0 sc
1 0 0 1 21.699131 -313 cm
/F1.1[ 8 0 0 8 0 0]sf
0 347 m
(0&\)1+#".)[ 5.000000 5.000000 3.000000 7.000000 2.000000 5.000000 5.000000 0.000000 ] xS
0.27058819 0.27058819 0.27058819 sc
1 0 0 1 92.017944 -313 cm
/F2.1[ 10 0 0 10 0 0]sf
0 347 m
("#!)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 152.33929 -313 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 212.6606 -313 cm
0 347 m
(!#")[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 269.98203 -313 cm
0 347 m
(*%#")[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 333.30328 -313 cm
0 347 m
(%#%)[ 6.000000 3.000000 0.000000 ] xS
0 0 0 sc
1 0 0 1 37.696609 -329 cm
/F1.1[ 8 0 0 8 0 0]sf
0 347 m
(2)s
0.27058819 0.27058819 0.27058819 sc
1 0 0 1 92.017944 -329 cm
/F2.1[ 10 0 0 10 0 0]sf
0 347 m
(\(#')[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 152.33929 -329 cm
0 347 m
(!#$)[ 6.000000 3.000000 0.000000 ] xS
1 0 0 1 209.6606 -329 cm
0 347 m
("\(#')[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 269.98203 -329 cm
0 347 m
("$#$)[ 6.000000 6.000000 3.000001 0.000000 ] xS
1 0 0 1 330.30328 -329 cm
0 347 m
(&$#$)[ 6.000000 6.000000 3.000001 0.000000 ] xS
ep
end
