%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 396.000000 119.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 396 119
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 396 119
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: YuGothic-Regular
%!FontType1-1.0: YuGothic-Regular 1.0000.1.8500
14 dict begin/FontName /YuGothic-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid8 put
dup 34 /gid23 put
dup 35 /gid13 put
dup 36 /gid21 put
dup 37 /gid22 put
dup 38 /gid16 put
dup 39 /gid19 put
dup 40 /gid18 put
dup 41 /gid9 put
dup 42 /gid10 put
dup 43 /gid14 put
dup 44 /gid4 put
dup 45 /gid5 put
dup 46 /gid20 put
dup 47 /gid12 put
dup 48 /gid25 put
dup 49 /gid15 put
dup 50 /gid2 put
dup 51 /gid6 put
dup 52 /gid3 put
dup 53 /gid24 put
dup 54 /gid26 put
dup 55 /gid7 put
dup 56 /gid17 put
dup 57 /gid27 put
dup 58 /gid1 put
dup 59 /gid11 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -840 1 index div -619 2 index div 2378 3 index div 2642 5 -1 roll div]cvx def
/sfnts [<







294B3D6B814B4700000100500014029C059C001300234013001109090C0411104E6C0111060C074E6C0C0B003F2B3F332B3212392F10C430310111211521111433323707062320111123353311017F0102FEFE984243094051FEFEB0B0059CFE9166FD66B50F680B010002B366015200000100C7001403D9042D0015001B400E030302150C06020A0710506C070B003F2B3F3F3312392F30310111233506070623222726351133111433323736371103D97B456D5E648A4F4A81C45F625538042DFC00C36D3B34534C8002FAFD2DD5453C5A02CD0001004E002D039C042D0014000EB5140E06030C0A003F333F3330310902230326272627060703230101331316173713037FFEBB016290E30B13110A1525DD8B015CFEB690CB1B223BC1042DFE12FDEE0162121D1C0F203AFE9E020E01F2FEBC2C3065013B000001004CFEBA03A0042D001A00204013010E0F1404051A1006050A4F6C0508506C050E003F2B2B3F33121739303101010607062322272716333237363737013313161733363736371303A0FE7D4161507933290A372F5E3B352C13FE9389DE14290A0F161708D9042DFBCBB8493D086F0C3D35773103EEFD6C3D912B47471A028F0000020160FEBA060C061B00160030001E400F244E0D2525051B4E150B2E4E05020E003F2FED3FED11392F33ED303125032301122132171615140706071617161514070623220316171633323736353427262323373332373635342726232203026C8983018B670162A45E56785D988347479384C4FA4E15285EA3AC64505F52805418569C6972403B66F34FD5FDE505DC018561578EA6634D1925656493D286790130312C6B81678BA55A4D634B5397713B36FEDA0001021FFEBA066104440014001E40111313031406030E0E0B4E6C0E094E6C0E07003F2B2B3F3F12392F30310101032313032627262322073736333217161713010661FD4597839D4E091E1A352B1B1F2221732F280B3A0235042DFC87FE0601FC029A58201C055E073B3275FDDB02F0000100000001D99A049975525F0F3CF5000F080000000000CDB8B81D00000000D8C9D29AFCB8FD95094A0A5200000006000200000000000000010000070AFE3904000993FCB8FD54094A00010000000000000000000000000000001C080000CD05CB00A6037B00A4021000A2047300D104730087047300770473008B05DB008F050800600477008504A400CD042100850477008B0462006604A400CD021900AE06E300CD04A400CD047D008B04A400CD0412007502D1005004A600C703E9004E03F0004C080001600800021F0000003200560069007B00A400E50148016E01CB01E7023E028302C1030B039D03CB03E8042F045B049904DD0538056C059E05D10612066C06A4000000010000001C025A001F0050000400020010002F008A0000
038F0E8200030001BD011B01100032001F0128010E40121B1FE933E855E801CB55E733CB55E6CBFF1FBD0118011000FF001F01150112400E801FE133E055CFCCFF1FCECBFF1F410A01140110002E001F011301120055001F0112010E402C481FDB33DA55CD01CB55CC33CB551BCB2BCB5BCB8BCB9BCB054BCB7BCB8BCBBBCBEBCB050BCB3BCBDBCB0380BE01110001004F01100001010F010E40FF551FE448E3552FE301DE33DD55D901D755D833D755CA01C855C933C8550BC81BC84BC85BC88BC89BC8064BC85BC88BC89BC8CBC8DBC8069BC8DBC8027F39101F7E39181F7D3A931F7C3AFF1F7B3AAB1F7A39931F7939FF1F7838FF1F77370F1F7637FF1F7537CD1F7436FF1F7336931F7235801F7135FF1F7034FF1F6F34AB1F6E33FF1F6D2F2B1F6C32AB1F6B32FF1F6A2FFF1F6930FF1F6831FF1F672EFF1F662D801F652DFF1F642DAB1F632D261F622CFF1F612BCD1F602BFF1F5F2BAB1F5E29721F5D29FF1F5C2AFF1F5B2A671F5A28FF1F5926671F5826FF1F5726CD1F5626671F5527801F5427FF1F5327CD1F5225FF1F5124FF1F50234A1F4F238040D01F4E23FF1F4D234F1F4C22FF1F4B21311F4A21FF1F4921AB1F4821671F47214A1F4620561F4520AB1F4420FF1F431FAB1F421FFF1F411FCD1F401EFF1F3F1D801F3E1DFF1F3D1D931F3C1D451F3B1CFF1F3A39361F36341F1F35344F1F322F801F3130721F302F361F2A29CD1F2726341F26241B195C251B1F1F241A0C1F23041A195C2219111F2119FF1F202518165C1F18931F1E0317165C1D16FF1F1C161B1F1B3219275B183616375B1A3219275B173616375B15193C16815A1340125511FF105512881088200D2331460D220C55B8FFE0400905233146052204550CB80138B4FF890C8804B80130400DFF890488200B2931460B280A55B8FFE0400907293146072806550EB8013AB4FF890E880AB80136B4FF890A8806B80132B43289068800B8012C400DFF890088200923314609220855B8FFE04009032331460322025508B80134B4FF89088802B8012EB3FF890288410F0138008801300088013A00880136008801320088012C008801340088012EB5880340400501B9019000542B4BB807FF524BB008505BB00188B02553B00188B040515AB00688B000555A5B58B101018E59858D8D001D424BB0905358B20300001D4259B10202435158B104038E59002B002B002B002B002B002B002B002B002B2B002B2B2B2B2B2B002B2B002B2B002B2B002B2B2B2B2B2B002B2B002B2B2B2B2B2B002B002B2B2B012B012B012B012B012B012B2B002B002B012B012B2B002B002B2B012B2B012B2B2B2B002B2B2B012B2B2B2B2B002B2B2B2B2B2B2B012B2B2B2B2B2B002B2B2B2B2B2B2B2B2B2B2B2B2B012B2B2B2B2B002B2B2B2B2B2B2B2B2B012B2B2B2B2B2B2B002B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B7374752B2B2B2B2B732B012B0075737374752B2B2B012B2B002B2B2B2B012B002B2B2B2B2B012B002B180000
00>] def
/CharStrings 28 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
/gid5 5 def
/gid6 6 def
/gid7 7 def
/gid8 8 def
/gid9 9 def
/gid10 10 def
/gid11 11 def
/gid12 12 def
/gid13 13 def
/gid14 14 def
/gid15 15 def
/gid16 16 def
/gid17 17 def
/gid18 18 def
/gid19 19 def
/gid20 20 def
/gid21 21 def
/gid22 22 def
/gid23 23 def
/gid24 24 def
/gid25 25 def
/gid26 26 def
/gid27 27 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-840 -619 2378 2642}def
/UniqueID 4095570 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C926AE0E2EF20EAFDBFC5FC1E83BEF5713FF899F5A98AA12E11EE8D73566FE8122482F810FE5F48B948EFD5F6295ECAD739C58CBF2D7FE9C0A445D98D19863293BD1D12808E5BD2DBFB6779CDC43CEE953007846B2589DA1A7C9B2B4FA15F719EAFC6A0B4C4F192FE371CC888EA1CE4298C2E55D7ACE5CE94C5E4E1510F3E0FC8E073B51040F2CD89666466EFB6E4831013FA1249EF41ED8081C41D93EF146F1652DA6EBF743905F426E39708AF383E2AA44B08543471558631DC7BDC33686CB781F778178ADBAD9DD8DDEF080B9D76D7625C9931F70C4B8D904505061BD9243AD60F2D00C3B62C4071935F142CCCEA24B89116B63F99D3E4D921BA10D475DFAA8E7F6FF230F193D30D542B7A36576AA0DF12B62CAE71703955F86850C487BCA678E3F4DB7D57BEAB8907C43D5E4A889A1F5F34C9C39BB80F6203AA6709ACE4B651DD7A06A1F01513DF54D1254F8B84C47A0C9D801B9DE328F88132D4A62504888E21F77BC79AAE8CF03DB22161DEC8EB89D18ACFE9DEC4773ADDF96506E9816E78DCC36BCD1B961E7EEB9FC847DB74C63950B3DA6DB3C68130D95066944D83C8880ED079924321EA50AD26390399AA39647C0051243382FED4779D65146FC4A4567F90E910694EC0235C646F373EED8AA68E29AC670728F6604127938E1BE1DD15B358EEC1226BC7C4BDF82B7A6B799D3C74093486D2DEEE9E3C006EBF095F6F2793BB2451C919B9BCDED206ADD830C0A4126F9344115BE68C2CEAB71880A18BB3

BB08B62C6272315C81D4613E62AF0A06EECAC81627294A49AA1D9597CB48A07A52D60FB7030AD4159339F845A20B734E7250985267A3BB26B32A52D4F6A99EFA6F23BD731384089E96EE5C8472D9732A35FB0173DC0D4E27C941A6E69E2E0F0713B0DB073308E361A95659A7D8BA88CE841F6E9EED219B298DC80A4E8FD6030EA5886A5CB7771B2B6AE4ADE5D9B9E6BA3BC77A4C866D4B4734DAE060AEE231D829C3EDF7E5EBA4516AE62C23F8CC5968B58AC910E2C2150776659D224E03BB5E51D0F09749DBF0A695059EA177643D89E0722D1D1CF9E96C9C3DBF7BA42B8925D80567D8418AED0424F7B47674C0102D0422F0D0CAF36CE84530AC24063448E484DBDAA4FC7B3BDD1271A371C3CBC0E7789BA58ED20F973364501AF85C69B29620D6B47EEBA9E69E8C11B25F6AB1DA0BF6E478AFA66DC969DC6954EEBDF48865F810983C4DC4CD22ACA41015D73731C552077C94A50381F0CE130202986C20D1C4821A0117F2C0670DDB2E7DA24532D34A64D269E06B8F2AF12723CA3B50BA07658650B5A10D6B892E95C7DB7632DBCBECF944DA0E302B3CB72B8DBE0071257B0E927174DC5A58A2C617DC28A93D77A2A0A2A6D9089CEBFE1EADE716EC484363515F4DD637508C8D0D823F162D3C4BF8870C7A1538B16CE8779B38852D45215042952067E599C8DD305508695FA39C21A98B73E0614A4D84585F047730D7A260A066525B46862DCDEE7E21F27A66532972D4E863636513B2D0F69053027D184384EFAEF4A33ABEC5A526D5BBBBD1C4566CE138F70C06E1F0E5359094E237F6494C9F8BE7C18A8B7BE11F9F5492064D5E0BAAE2B492299FB293C65DBCB2ACD1B3E783ED6200E6EDDED127235E6B56540413A127356FE7063F978BA6A7EF53F844CDA3E804F66712E41F7571B6B9419BA68156D6781599AE1D79CFED2E733A84F3ACF37B6CE008C85A3040AD0B53E77CF5795893A311D27DF9968683413C283D062B022D45ACC6CDC1A142949CF4CBD34C272D4BA6F23D80496FB2364ADFB62AE0D8D082DB8303792EB0C4F9A9E6D21B89FE4EAC7C7AA9EF27065BF4A5D4295F0F6CF345F2CA1C245391FE649BAFBA9C4980917435C35BA53996DAEF09FEFFD367AEB203C89087F5BDD7EAA16D61B4A5FDA6D8A683B18BB220178379A4558C09ABE1760469C2BF03D79A695A05AB91A6F04D1F44B31A4F270A14965D4C72EAACA2F35372C9157B1EEF50F4DBF7A985EB6D67D59F0A105149F63BBDA5A74805763A289B87B7BA8E0750792B09E50966FF80FACD4A10D0773E9678A40E9C0B7F6BC36466A7B48B381B76A2CD36CBD9F0EEE09279C65DE1D6099AB82C9C103420CECC5CDDE320797F410E2BCE9352EE65298FE53191E216C0D07B55E75EBD4AB57A882A1E8BF39EA4ABD0C9445BE06274CC23E6DF622AF7E67287D10036D980F6F4C9


0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/YuGothic-Regular cguidfix
/F1.1/YuGothic-Regular renmfont
%RBIBeginFontSubset: CambriaMath
%!FontType1-1.0: CambriaMath 1.0000.6.9000
14 dict begin/FontName /CambriaMath def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid2 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -3020 1 index div -5046 2 index div 5873 3 index div 6383 5 -1 roll div]cvx def
/sfnts [<

00>] def
/CharStrings 3 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-3020 -5046 5873 6383}def
/UniqueID 4480348 def
currentdict currentfile eexec

A6F1B3ADD11AE832EE04DA2A5A487F60F939B1727B0E32362292EA1DA04EA3203B668360C0DC59A72D938A5B51CF03CD9B10C3780396E72AF05A9D4982F038DEFC2CDE2F1E17C1149A817A9F6C7A223B81AC840852C950FCA64573CA8B8EB56A14DEE9B9B6FF01F6DB6222086C76337883DB763A811FE036467E178255813E8BCA354A8ED86A5A0E3B2A917E428E9CFFC27946
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/CambriaMath cguidfix
/F2.1/CambriaMath renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
0 0 396 119 rc
-490.5 251.5 m
627.5 251.5 l
627.5 -531.5 l
-490.5 -531.5 l
h
-490.5 251.5 m
f
Q
/Cs2 SC
1 1 1 sc
q
9.0351562 109.94141 m
386.03516 109.94141 l
386.03516 9.9414062 l
9.0351562 9.9414062 l
h
9.0351562 109.94141 m
W
9 10 377 100 rc
9 10 m
386 10 l
386 110 l
9 110 l
h
f
6350 w
1 j
0 0 0 sc
0.00007874 0 0 -0.00007874 9.5 109.51252 cm
952500 179705.02 m
952500 1208405 l
S
1905000 179705.02 m
1905000 1208405 l
S
2857500 179705.02 m
2857500 1208405 l
S
3810000 179705.02 m
3810000 1208405 l
S
CM
9.5 95.362518 m
384.5 95.362518 l
384.5 94.695847 l
9.5 94.695847 l
h
9.5 94.02919 m
384.5 94.02919 l
384.5 93.362518 l
9.5 93.362518 l
h
f
0.00007874 0 0 -0.00007874 9.5 109.51252 cm
0 446405.03 m
4762500 446405.03 l
S
1 0 0 1 22.24996 -20 cm
/F1.1[ 12 0 0 12 0 0]sf
0 100 m
(!"#$%&'\()[ 9.000001 6.995999 6.996000 6.000000 3.996002 3.000000 6.995998 0.000000 ] xS
1 0 0 1 107.25 -20 cm
0 100 m
(\)*+,)[ 8.000401 7.004400 7.004400 0.000000 ] xS
1 0 0 1 182.25 -20 cm
0 100 m
(\)*+-)[ 8.000401 7.004400 7.004400 0.000000 ] xS
1 0 0 1 253.25 -20 cm
0 100 m
(\)'.&/,)[ 8.000401 7.004400 7.004400 2.996399 5.996403 0.000000 ] xS
1 0 0 1 328.25 -20 cm
0 100 m
(\)'.&/-)[ 8.000401 7.004400 7.004400 2.996399 5.996403 0.000000 ] xS
1 0 0 1 43.25248 -39 cm
/F2.1[ 12 0 0 12 0 0]sf
0 100 m
(!)s
1 0 0 1 103.25248 -40 cm
/F1.1[ 12 0 0 12 0 0]sf
0 100 m
(.0%1'\()[ 6.999600 6.003600 3.999601 6.999601 6.999599 0.000000 ] xS
1 0 0 1 167.25 -40 cm
0 100 m
(.0%1'\()[ 6.999600 6.003600 3.999601 6.999601 6.999599 0.000000 ] xS
1 0 0 1 205.25 -40 cm
0 100 m
(2)s
1 0 0 1 210.25 -40 cm
0 100 m
(345)[ 6.999600 3.003599 0.000000 ] xS
1 0 0 1 253.25249 -40 cm
0 100 m
(.0%1'\()[ 6.999600 6.003600 3.999601 6.999601 6.999599 0.000000 ] xS
1 0 0 1 41.25 -60 cm
0 100 m
(6)s
1 0 0 1 92.25 -60 cm
0 100 m
(.0%1'\()[ 6.999600 6.003600 3.999601 6.999601 6.999599 0.000000 ] xS
1 0 0 1 130.25 -60 cm
0 100 m
(2)s
1 0 0 1 135.25 -60 cm
0 100 m
(-47)[ 6.999600 3.003599 0.000000 ] xS
1 0 0 1 178.25 -60 cm
0 100 m
(\("8.0)[ 6.999600 6.999599 9.999600 6.999599 0.000000 ] xS
1 0 0 1 253.25249 -60 cm
0 100 m
(.0%1'\()[ 6.999600 6.003600 3.999601 6.999601 6.999599 0.000000 ] xS
1 0 0 1 328.25 -60 cm
0 100 m
(\("8.0)[ 6.999600 6.999599 9.999600 6.999599 0.000000 ] xS
1 0 0 1 41.25 -80 cm
0 100 m
(9)s
1 0 0 1 103.25 -80 cm
0 100 m
(/::,7)[ 6.000000 9.000002 9.000002 6.995998 0.000000 ] xS
1 0 0 1 167.2525 -80 cm
0 100 m
(;''$%)[ 6.999600 6.999600 6.999601 6.003601 0.000000 ] xS
1 0 0 1 198.2525 -80 cm
0 100 m
(2)s
1 0 0 1 203.2525 -80 cm
0 100 m
(*$&')[ 6.999600 6.003600 3.003599 0.000000 ] xS
1 0 0 1 260.25 -80 cm
0 100 m
(/::)[ 6.000000 9.000002 0.000000 ] xS
1 0 0 1 331.2525 -80 cm
0 100 m
(;''$%)[ 6.999600 6.999600 6.999601 6.003601 0.000000 ] xS
ep
end
